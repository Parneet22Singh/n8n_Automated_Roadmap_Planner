{
  "name": "Roadmap_planner",
  "nodes": [
    {
      "parameters": {
        "formTitle": "Student Roadmap Planner",
        "formDescription": "Generate a 6 month roadmap for the desired stack!",
        "formFields": {
          "values": [
            {
              "fieldLabel": "What is your name?",
              "requiredField": true
            },
            {
              "fieldLabel": "What is your discipline of study?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "B.Tech / B.S"
                  },
                  {
                    "option": "BCA"
                  }
                ]
              },
              "multiselect": true
            },
            {
              "fieldLabel": "What year are you in?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "1"
                  },
                  {
                    "option": "2"
                  },
                  {
                    "option": "3"
                  },
                  {
                    "option": "4 (Not applicable for BCA students)"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Which stack would you like the roadmap to be on?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "AI/ML"
                  },
                  {
                    "option": "Full Stack Development"
                  },
                  {
                    "option": "Cybersecurity"
                  },
                  {
                    "option": "Data Science"
                  },
                  {
                    "option": "UI/UX"
                  },
                  {
                    "option": "DevOps"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "What is your current level of understanding?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Beginner"
                  },
                  {
                    "option": "Intermediate"
                  },
                  {
                    "option": "Advanced"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Could you please describe your current skills (only keywords) , if any prior exxperience?"
            },
            {
              "fieldLabel": "What is your email id?"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -420,
        20
      ],
      "id": "aaa0f765-9c80-459b-893a-501a4bba6df0",
      "name": "On form submission",
      "webhookId": "3362e5a6-7c67-49fc-8afe-5ab2ed95edcf"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "You are an AI assistant expert in creating academic and career roadmaps. Based on the user's input about their current year in B.Tech (1 to 4), generate a detailed roadmap covering relevant semester (Just that semester meaning roadmap of 6 months), skills, projects, and internship prep and give proper breakdown of each month for the whole semester.\n\nOutput the entire roadmap as clean, semantic HTML with headings, lists, and sections and also mention the mail in the output.\n\nDo NOT include any explanations or extra text—ONLY return the complete HTML snippet.\n\nMake sure the HTML uses proper tags like <h2>, <ul>, <li>, <p> for readability and formatting.\n\nThe HTML should be self-contained and suitable to embed in emails or webpages.\n\n\n⚠️ Do not use Markdown formatting like *, **, or #.\nJust use plain section headers (e.g., “Semester 5”) and dash - bullet points.\nAvoid using any formatting characters.\nThe roadmap should be limited to that very semester only, don't generate any other information.",
        "options": {
          "systemMessage": "=You are an academic roadmap planner.  \nStudent's name: {{ $json['What is your name?'] }}\nDiscipline:{{ $json['What is your discipline of study?'] }}\nYear: {{ $json['What year are you in?'] }}\nUnderstanding: {{ $json['What is your current level of understanding?'] }}\nEmail:{{ $json['What is your email id?'] }}\nBased on this info, create a personalized study plan.\n\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -200,
        20
      ],
      "id": "0a8b606a-2494-4b44-b4e0-45347da377cc",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -112,
        240
      ],
      "id": "9409c060-ab8d-44c8-8662-78c08f457e32",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "tGSYRDvf79wsShIr",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ $json.email }}",
        "subject": "=Student Roadmap Planner",
        "message": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        400,
        0
      ],
      "id": "f5d62fca-e4bc-4c9c-ab81-1338155893f4",
      "name": "Gmail",
      "webhookId": "8f90074d-244b-4c28-bdcd-319e4d643d8f",
      "credentials": {
        "gmailOAuth2": {
          "id": "TGqrXZT7amcPCshV",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const html = $input.first().json.output; // Replace if needed\n\nconst plain = html\n  .replace(/<[^>]+>/g, '')  \n  .replace(/•/g, '-')        \n  .replace(/\\n\\s*\\n/g, '\\n');\n\nconst lines = plain\n  .split('\\n')\n  .map(line => line.trim())\n  .filter(line => line.startsWith('-') && line.length > 5);\n\nconst now = new Date();\n\nconst semesterStart = new Date(now.getFullYear(), 6, 15); \nconst semesterEnd = new Date(now.getFullYear(), 10, 15);  \n\nconst totalSemesterDays = (semesterEnd - semesterStart) / (1000 * 60 * 60 * 24);\nconst taskCount = lines.length;\nconst intervalDays = totalSemesterDays / taskCount;\n\nconst output = [];\n\nfor (let i = 0; i < taskCount; i++) {\n  const task = lines[i].replace(/^- /, '');\n\n  const start = new Date(semesterStart);\n  start.setDate(start.getDate() + Math.floor(i * intervalDays));\n  start.setHours(0, 0, 0, 0);  \n  let end;\n  if (i < taskCount - 1) {\n    end = new Date(semesterStart);\n    end.setDate(end.getDate() + Math.floor((i + 1) * intervalDays) - 1);\n    end.setHours(23, 59, 59, 999);\n  } else {\n    end = new Date(semesterEnd);\n    end.setHours(23, 59, 59, 999);\n  }\n\n  output.push({\n    json: {\n      summary: task,\n      description: 'Task spanning multiple days',\n      start: start.toISOString(),\n      end: end.toISOString()\n    }\n  });\n}\n\nreturn output;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        180,
        220
      ],
      "id": "364c55cf-e451-4e61-9ec5-7f8737cd0f91",
      "name": "Code2"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "parneet22singh@gmail.com",
          "mode": "list",
          "cachedResultName": "parneet22singh@gmail.com"
        },
        "start": "={{ $json.start }}",
        "end": "={{ $json.end }}",
        "additionalFields": {
          "description": "={{ $json[\"description\"] }}",
          "summary": "={{ $json[\"summary\"] }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        400,
        220
      ],
      "id": "da6cb878-5037-4cba-84be-b7ba38eb92ed",
      "name": "Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "53uIineasTmqgKaS",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const raw = $input.first().json.output; // Gemini's HTML output\n\nconst emailMatch = raw.match(/[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-z]{2,}/);\nconst extractedEmail = emailMatch ? emailMatch[0] : \"factoryaficionado@gmail.com\"; \nconst htmlFormatted = `<div style=\"font-family:Arial,sans-serif;line-height:1.6;font-size:14px\">${raw}</div>`;\nreturn {\n  json: {\n    email: extractedEmail,\n    html: htmlFormatted,\n    subject: \"Your Personalized B.Tech Roadmap\"\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        180,
        0
      ],
      "id": "5ea79659-a1f5-42d3-b668-f7e23c662eb0",
      "name": "Code"
    },
    {
      "parameters": {
        "content": "The Code2 node deals with segmenting the output provided by Gemini into specified fields such as start date, end date etc. for smooth creation of Google Calendar Events. ",
        "height": 120,
        "width": 280,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        380
      ],
      "id": "5b9f5f54-afe8-4dfc-92a5-58dcfcc69617",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "The Code function node extracts the email ID from the Gemini output while also forwarding the remaining content for use in the email body.",
        "height": 140,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        120,
        -200
      ],
      "id": "b4004f25-12d2-4ce9-a249-454146cb6f53",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 540,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -452,
        -60
      ],
      "id": "73214b32-3652-40cd-9cf4-f4664792cc1e",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "",
        "height": 180,
        "width": 480,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        -40
      ],
      "typeVersion": 1,
      "id": "6ade6940-2d6e-4391-849f-359c7d376734",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "",
        "width": 480,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        200
      ],
      "typeVersion": 1,
      "id": "49d29754-05aa-4ccb-9433-5e568ad88939",
      "name": "Sticky Note4"
    }
  ],
  "pinData": {},
  "connections": {
    "On form submission": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "main": [
        []
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Google Calendar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5e2cf52c-8a79-456b-ad1b-e52405574a4c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6ff833731bebf924f54230e0d40122d71747604b4891cbc7677374613560b3c3"
  },
  "id": "idyGGCTbJeXBGXmv",
  "tags": []
}